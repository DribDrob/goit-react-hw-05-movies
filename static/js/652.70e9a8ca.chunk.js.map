{"version":3,"file":"static/js/652.70e9a8ca.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","pages/pagesStyled/Page.styled.js","services/themoviedbAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color:  #5987c2;\n  }\n`;","import { FaArrowLeft } from 'react-icons/fa';\nimport { StyledLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft size=\"12\" />\n      {children}\n    </StyledLink>\n  );\n};\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\nexport const Subtitle = styled.h2`\n  margin-bottom: 8px;\n`;\nexport const StatisticsTitle = styled.h3`\n  margin-bottom: 8px;\n  font-weight: 700;\n  >span{\n    font-weight: 400;\n  }\n`;\nexport const StatisticsData = styled.p`\n  margin-bottom: 16px;\n`;\n\n","import defaultPosterImage from 'images/poter-default-image.png';\nimport {\n  Container,\n  Subtitle,\n  StatisticsTitle,\n  StatisticsData,\n} from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ data }) => {\n  const { poster_path, title, overview, genres, vote_average } = data;\n  const userScore = Math.round(vote_average * 10);\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : defaultPosterImage;\n\n  return (\n    <Container>\n      <img src={poster} alt={title} width=\"240\" />\n      <div>\n        <Subtitle>{title}</Subtitle>\n        <StatisticsTitle>\n          User Score: <span>{userScore}%</span>\n        </StatisticsTitle>\n\n        <StatisticsTitle>Overview</StatisticsTitle>\n        <StatisticsData>{overview}</StatisticsData>\n        <StatisticsTitle>Genres</StatisticsTitle>\n        <StatisticsData>{genres.map(g => g.name).join(' ')}</StatisticsData>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport { getMovieDetails } from '../services/themoviedbAPI';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { AdditionalTitle } from './pagesStyled/Page.styled';\nimport { StyledLink } from 'components/BackLink/BackLink.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovieDetails(Number(movieId))\n      .then(setMovieDetails)\n      .catch(error => toast.error('Something went wrong. Please try again.'));\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieCard data={movieDetails} />\n      <AdditionalTitle>Additional information</AdditionalTitle>\n      <ul>\n        <li>\n          <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </StyledLink>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\nexport const AdditionalTitle = styled.h3`\n  margin-bottom: 16px;\n`;\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n// import { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n  const { data } = await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Container","Subtitle","StatisticsTitle","StatisticsData","data","poster_path","title","overview","genres","vote_average","userScore","Math","round","poster","defaultPosterImage","src","alt","width","map","g","name","join","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","getMovieDetails","Number","then","catch","error","toast","Suspense","fallback","Loader","Title","AdditionalTitle","axios","API_KEY","getTrendingMovies","results","getSearchedMovies","query","params","URLSearchParams","api_key","language","include_adult","id","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}