{"version":3,"file":"static/js/415.4b638da3.chunk.js","mappings":"qNAoCA,UA/Ba,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAY,gDAC7B,KAGD,6BACE,4CAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,mDAApB,UACE,wBACGX,EAAeY,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACzB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMf,GAAzC,SACGY,KAFID,e,yMCbvBK,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAed,IAAtB,4CAAO,OAAP,oBAAO,sGAEgBa,IAAAA,IAAA,sCAAyCC,IAFzD,uBAEEC,EAFF,EAEEA,KAFF,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFAEGC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASP,EACTI,MAAOA,EACPI,SAAU,QACXC,eAAe,IANf,SAQmBV,IAAAA,IAAA,wBAA2BM,IAR9C,uBAQIJ,EARJ,EAQIA,KARJ,kBASEA,EAAKC,SATP,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhB,GAA/B,yFAEkBK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,EAAlC,oBAFlB,uBAEGC,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA4BjB,GAA5B,yFAEmBK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,oBAFnB,uBAEIC,EAFJ,EAEIA,KAFJ,kBAGAA,EAAKW,MAHL,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnB,GAA/B,yFAEkBK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,oBAFlB,uBAEGC,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP","sources":["pages/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(setTrendingMovies)\n      .catch(error => toast.error('Something went wrong. Please try again.'));\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {/* //TrendMoviesList movies={trendingMovies}*/}\n      <Suspense fallback={<div>Loading movie list...</div>}>\n        <ul>\n          {trendingMovies.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Home;\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n    const {data} =  await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingMovies","then","catch","error","toast","Suspense","fallback","map","id","title","to","state","from","axios","API_KEY","data","results","getSearchedMovies","query","params","URLSearchParams","api_key","language","include_adult","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}