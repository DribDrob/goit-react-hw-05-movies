{"version":3,"file":"static/js/415.4c3a2bd5.chunk.js","mappings":"sNAEaA,EAAOC,EAAAA,GAAAA,GAAH,+CAGJC,EAAOD,EAAAA,GAAAA,GAAH,sG,SCiBjB,EAjBkB,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAC9B,OACE,SAACL,EAAD,UACGG,EAAKG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACf,OACE,UAACN,EAAD,YACE,SAAC,MAAD,KACA,SAAC,KAAD,CAAMO,GAAE,UAAKL,GAAL,OAAWG,GAAMG,MAAO,CAAEC,KAAMN,GAAxC,SACGG,MAHMD,U,uHCoBrB,UAtBa,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMT,GAAWU,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,KAAKJ,GACLK,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAY,gDAC7B,KAGD,6BACE,SAAC,IAAD,8BACA,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,SACGV,IACC,SAAC,IAAD,CAAWV,KAAMU,EAAgBT,IAAI,UAAUC,SAAUA,W,uGCrBtDmB,EAAQvB,EAAAA,GAAAA,GAAH,gDAGLwB,EAAkBxB,EAAAA,GAAAA,GAAH,iD,yMCM5ByB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,sGAEgBS,IAAAA,IAAA,sCAAyCC,IAFzD,uBAEExB,EAFF,EAEEA,KAFF,kBAGEA,EAAKyB,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFAEGC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASN,EACTG,MAAOA,EACPI,SAAU,QACXC,eAAe,IANf,SAQkBT,IAAAA,IAAA,wBAA2BK,IAR7C,uBAQG5B,EARH,EAQGA,KARH,kBASEA,EAAKyB,SATP,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,yFAEkBmB,IAAAA,IAAA,iBAAoBnB,EAApB,oBAAkCoB,EAAlC,oBAFlB,uBAEGxB,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,yFAEmBmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA0CoB,EAA1C,oBAFnB,uBAEIxB,EAFJ,EAEIA,KAFJ,kBAGAA,EAAKmC,MAHL,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,yFAEkBmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA0CoB,EAA1C,oBAFlB,uBAEGxB,EAFH,EAEGA,KAFH,kBAGEA,EAAKyB,SAHP","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","pages/pagesStyled/Page.styled.js","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 4px;\n`;\n","import { RiMovie2Line } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ data, url, location }) => {\n  return (\n    <List>\n      {data.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <RiMovie2Line />\n            <Link to={`${url}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n  url: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Title } from './pagesStyled/Page.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(setTrendingMovies)\n      .catch(error => toast.error('Something went wrong. Please try again.'));\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      <Suspense fallback={<Loader />}>\n        {trendingMovies && (\n          <MovieList data={trendingMovies} url=\"movies/\" location={location} />\n        )}\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\nexport const AdditionalTitle = styled.h3`\n  margin-bottom: 16px;\n`;\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n// import { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n  const { data } = await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["List","styled","Item","data","url","location","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","useLocation","useEffect","getTrendingMovies","then","catch","error","toast","Suspense","fallback","Title","AdditionalTitle","axios","API_KEY","results","getSearchedMovies","query","params","URLSearchParams","api_key","language","include_adult","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}