{"version":3,"file":"static/js/593.dcda94af.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 4px;\n`;\n","import { RiMovie2Line } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { List, Item } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ data, url, location }) => {\n  return (\n    <List>\n      {data.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <RiMovie2Line />\n            <Link to={`${url}${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n  url: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormEl = styled(Form)`\n  margin-bottom: 32px;\n  display: flex;\n  gap: 8px;\n  width: 320px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\nfont-size: 16px;\n  padding: 4px 16px;\n  cursor: pointer;\n  font-family: inherit;\n  color: white;\n  background-color: #6fa7f0;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border: 0;\n  border-radius: 4px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { FormEl, Input, Button } from './SearchForm.styled';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  query: yup.string(),\n});\n\nconst initialValues = {\n  query: '',\n};\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = ({ query }, { resetForm }) => {\n    if (query.trim() === '') {\n      toast.error('Please, enter the search query.');\n      return;\n    }\n    onSubmit(query);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"query\"\n        />\n        <Button type=\"submit\">Search</Button>\n        <ErrorMessage name=\"query\" />\n      </FormEl>\n    </Formik>\n  );\n};\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getSearchedMovies } from 'services/themoviedbAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const handleSubmit = query => {\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n  useEffect(() => {\n    if (query) {\n      getSearchedMovies(query)\n        .then(movies => {\n          if (movies.length === 0) {\n            return toast.error(\n              'Sorry, there are no movies matching your search query. Please try again.'\n            );\n          }\n          setSearchedMovies(movies);\n        })\n        .catch(error => toast.error('Something went wrong. Please try again.'));\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleSubmit} />\n      <Suspense fallback={<Loader />}>\n        {searchedMovies && (\n          <MovieList data={searchedMovies} url=\"\" location={location} />\n        )}\n      </Suspense>\n    </main>\n  );\n};\nexport default Movies;\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n// import { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n  const { data } = await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["List","styled","Item","data","url","location","map","id","title","to","state","from","FormEl","Form","Input","Field","Button","schema","yup","shape","query","initialValues","onSubmit","validationSchema","resetForm","trim","toast","type","autoComplete","autoFocus","placeholder","name","useSearchParams","searchParams","setSearchParams","useState","searchedMovies","setSearchedMovies","get","useLocation","useEffect","getSearchedMovies","then","movies","length","catch","error","Suspense","fallback","Loader","MovieList","axios","API_KEY","getTrendingMovies","results","params","URLSearchParams","api_key","language","include_adult","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}