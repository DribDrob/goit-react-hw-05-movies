{"version":3,"file":"static/js/186.b9a91726.chunk.js","mappings":"gMA0CA,UAtCgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAOJ,IAAUK,KAAKN,KACrC,CAACC,IAECF,EAIuB,IAAxBA,EAAaQ,QACR,sEAGP,wBACGR,EAAaS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,QAVR,O,yMCHXG,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEgBF,IAAAA,IAAA,sCAAyCC,IAFzD,uBAEEE,EAFF,EAEEA,KAFF,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFAEGC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASR,EACTK,MAAOA,EACPI,SAAU,QACXC,eAAe,IANf,SAQmBX,IAAAA,IAAA,wBAA2BO,IAR9C,uBAQIJ,EARJ,EAQIA,KARJ,kBASEA,EAAKC,SATP,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,yFAEkBG,IAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,EAAlC,oBAFlB,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhB,GAA5B,yFAEmBG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,EAA1C,oBAFnB,uBAEIE,EAFJ,EAEIA,KAFJ,kBAGAA,EAAKW,MAHL,kEAMA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BK,GAA/B,yFAEkBG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,EAA1C,oBAFlB,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP","sources":["components/Reviews/Reviews.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/themoviedbAPI';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(Number(movieId)).then(setMovieReviews);\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return null;\n  }\n\n  if (movieReviews.length === 0) {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n  return (\n    <ul>\n      {movieReviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n\n            {/* {content.length < 450 ? (\n                <p>{content}</p>\n              ) : (\n                <div>\n                  <p>{content.substring(0, 451)}</p>\n                  <button onClick={children: content.substring(451)}>...</button>\n                </div>\n              )} */}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n\n// \"author\": \"SWITCH.\",\n// \"author_details\": {\n// \"name\": \"SWITCH.\",\n// \"username\": \"maketheSWITCH\",\n// \"avatar_path\": \"/klZ9hebmc8biG1RC4WmzNFnciJN.jpg\",\n// \"rating\": 2\n// },\n// \"content\": \"‘The Lion King’ is a catastrophe; a new low in the ever-diminishing returns of Disney’s endless run of remakes. There’s nothing redeeming about it, with every decision either ill-conceived or mishandled to the point of incompetence. In Favreau’s hands, ‘The Lion King’ is rendered thunderously dull, lacking in any tension or complex characterisation, taking a laboriously long time to go nowhere and never once justifying its contentious existence. Even with my dislike of the original, I was flabbergasted at how thoroughly this film never attempts to understand why so many people love the 1994 film. If nothing else, this film makes it abundantly clear that Disney has no interest in making great cinema or honouring its own legacy. They don’t care whether the film is good or whether you enjoy it. All they care about is using nostalgia to trick you into buying your ticket so they can make as much money off you as they can, and maybe if they throw some recognisable iconic moments from your childhood on the screen, they may even be able to fool you into thinking you’d had a good time. ‘The Lion King’ is the ultimate diabolical apex of the commercialisation of nostalgia, and its inevitable box office success will just prove how easily we continue to be duped and how thoroughly they have trained us to not care about the quality of what we see. If this really is the future of mainstream cinema, then we are in serious, serious trouble.\\r\\n- Daniel Lammin\\r\\n\\r\\nRead Daniel's full article...\\r\\nhttps://www.maketheswitch.com.au/article/review-the-lion-king-a-catastrophic-and-soulless-remake-of-a-disney-classic\",\n// \"created_at\": \"2019-07-16T14:17:33.081Z\",\n// \"id\": \"5d2ddc7d6a300b0011a469df\",\n// \"updated_at\": \"2021-06-23T15:58:24.307Z\",\n// \"url\": \"https://www.themoviedb.org/review/5d2ddc7d6a300b0011a469df\"\n// }\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n    const {data} =  await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","Number","then","length","map","id","author","content","axios","API_KEY","getTrendingMovies","data","results","getSearchedMovies","query","params","URLSearchParams","api_key","language","include_adult","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}