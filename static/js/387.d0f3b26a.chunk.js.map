{"version":3,"file":"static/js/387.d0f3b26a.chunk.js","mappings":"yRAEaA,EAAOC,EAAAA,GAAAA,GAAH,0HAQJC,EAAOD,EAAAA,GAAAA,GAAH,6QAcJE,EAAYF,EAAAA,GAAAA,EAAH,wFAKTG,EAAiBH,EAAAA,GAAAA,IAAH,0CAIdI,EAAQJ,EAAAA,GAAAA,IAAH,8C,SCgBlB,EAzCa,WACX,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaC,OAAOJ,IACjBK,KAAKN,GACLO,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAY,gDAC7B,CAACR,IAECF,EAGoB,IAArBA,EAAUW,QACL,wEAIP,SAAClB,EAAD,UACGO,EAAUY,MAAM,EAAG,IAAIC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC/CC,EAAQH,EAAY,yCACYA,GAClCI,EAEJ,OACE,UAACxB,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAAOsB,IAAKF,EAAOG,IAAKL,EAAMM,MAAM,WAEtC,4BACE,SAAC1B,EAAD,UAAYoB,KACZ,uCACA,uBAAIC,SAPGH,QAdV,O,yMCRXS,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAEgBF,IAAAA,IAAA,sCAAyCC,IAFzD,uBAEEE,EAFF,EAEEA,KAFF,kBAGEA,EAAKC,SAHP,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,kFAEGC,EAAS,IAAIC,gBAAgB,CAC/BC,QAASR,EACTK,MAAOA,EACPI,SAAU,QACXC,eAAe,IANf,SAQkBX,IAAAA,IAAA,wBAA2BO,IAR7C,uBAQGJ,EARH,EAQGA,KARH,kBASEA,EAAKC,SATP,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BrB,GAA/B,yFAEkBS,IAAAA,IAAA,iBAAoBT,EAApB,oBAAkCU,EAAlC,oBAFlB,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BS,GAA5B,yFAEmBS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CU,EAA1C,oBAFnB,uBAEIE,EAFJ,EAEIA,KAFJ,kBAGAA,EAAKU,MAHL,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BvB,GAA/B,yFAEkBS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CU,EAA1C,oBAFlB,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,oE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\nmargin-top: 16px;\n  padding-left: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  \n`;\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n  margin-bottom: 4px;\n  font-size: 14px;\n  >div{\n    padding: 5px 10px;\n    text-align: center;\n    background-color: #bfd6f5;\n    width: 100%;\n  }\n`;\nexport const CardTitle = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\nexport const PhotoContainer = styled.div`\n  height: 225px;\n`;\n\nexport const Photo = styled.img`\n  object-fit: cover;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/themoviedbAPI';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport defaultCastImage from 'images/cast-default-image.jpg';\nimport { CardTitle, Item, List, Photo, PhotoContainer } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(Number(movieId))\n      .then(setMovieCast)\n      .catch(error => toast.error('Something went wrong. Please try again.'));\n  }, [movieId]);\n\n  if (!movieCast) {\n    return null;\n  }\n  if (movieCast.length === 0) {\n    return <p>We don't have any cast list for this movie.</p>;\n  }\n\n  return (\n    <List>\n      {movieCast.slice(0, 20).map(({ id, profile_path, name, character }) => {\n        const photo = profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : defaultCastImage;\n\n        return (\n          <Item key={id}>\n            <PhotoContainer>\n              <Photo src={photo} alt={name} width=\"150\" />\n            </PhotoContainer>\n            <div>\n              <CardTitle>{name}</CardTitle>\n              <p>Character:</p>\n              <p>{character}</p>\n            </div>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n","// API themoviedb.org\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.\n\nimport axios from 'axios';\n// import { toast } from 'react-toastify';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8f517ea939a3e5bbc59bc55f9e33cbf1';\n\nexport async function getTrendingMovies() {\n    // https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n  const {data} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n}\n\nexport async function getSearchedMovies(query) {\n    // https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n    const params = new URLSearchParams({\n        api_key: API_KEY,\n        query: query,\n        language: 'en-US',\n       include_adult: false,\n    });\n  const { data } = await axios.get(`/search/movie?${params}`);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n    // https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n\nexport async function getMovieCast(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n   const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\nreturn data.cast;\n}\n\nexport async function getMovieReviews(id) {\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n\n"],"names":["List","styled","Item","CardTitle","PhotoContainer","Photo","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCast","Number","then","catch","error","toast","length","slice","map","id","profile_path","name","character","photo","defaultCastImage","src","alt","width","axios","API_KEY","getTrendingMovies","data","results","getSearchedMovies","query","params","URLSearchParams","api_key","language","include_adult","getMovieDetails","cast","getMovieReviews"],"sourceRoot":""}